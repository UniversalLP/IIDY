buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

ext.configFile = file('build.properties')

ext.config = parseConfig(configFile)

version = "${config.version}-${config.build_number}"
group = "universal.lunarpanels" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = config.mod_name

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${config.mc_version}-${config.forge_version}"
    runDir = "run"
    
    replace '@BUILD@', config.build_number
    replace '@VERSION', config.version

    mappings = config.mc_mappings
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    maven { url = "http://maven.covers1624.net" }
}

dependencies {
    deobfCompile "cofh:RedstoneFlux:1.12-2.0.0.1:universal"
}

/**
 * Increments the buildnumber in your config file, and saves it
 * from https://github.com/Vazkii/Botania/blob/master/build.gradle
 */
task incrementBuildNumber(dependsOn: 'reobfJar') << {
    config.build_number = (config.build_number.toString().toInteger()) + 1
    configFile.withWriter {
        config.toProperties().store(it, "")
    }

    // todo make this flexibile - collection of supported mc versions

    file('web/versions.ini').append("\n${version}=${minecraft.version}")
    file("${config.dir_repo}/version/${minecraft.version}.txt").write("${version}")
}

def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

defaultTasks 'clean', 'build', 'incrementBuildNumber'